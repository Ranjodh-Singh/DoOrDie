package edu.princeton.cs.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
/*
 * 1-4 , 3-5, 6-8 , 8-9,7-10
 */
public class Room {
	public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(System.in);
		List<Request> requests = new ArrayList<Request>();
		Map<Integer ,Request>  map = new HashMap<Integer, Request>();
		//input all the request like this lets run for 5 interval;
		for(int i =0; i<5;i++){
		Request request  = new Request(sc.nextInt(),sc.nextInt(),i+10);
		requests.add(request);
		map.put(request.color,request);
		}
		 int[][] results;
		results = new int[requests.size()][5];
		Collections.sort(requests);
		for (int i = 0; i < requests.size()-1; i++) {
			results [i][0] = requests.get(i).color;
			 int k =i;
			for (int j = i+1; j < requests.size(); j++) {
				if(requests.get(k).rear < requests.get(j).front){
					results[i][j] = requests.get(j).color;
					k = j;
				}
			}
		}
		int buckets[] = new int[requests.size()];
		for (int i = 0; i < buckets.length; i++) {
			buckets[i] = results[i].length;
		}
		Arrays.sort(buckets);
		//System.out.println(buckets[buckets.length-1]);
		for (int i = 0; i < results.length; i++) {
			for (int j = 0; j < results[i].length; j++) {
				if(map.get(results[i][j]) != null)
				System.out.print(map.get(results[i][j]).front+"-"+map.get(results[i][j]).rear+",");
				
			}
			System.out.println();
			
		}
	}

}
class Request implements Comparable<Request>{
int front, rear,color,days;
Request(int front, int rear,int color){
this.front = front;
this.rear = rear;
days = rear-front+1;
this.color = color;
}
public int compareTo(Request req){
if(this.front > req.front) return 1;
else if (this.front < req.front) return -1;
else return 0;
}
}
